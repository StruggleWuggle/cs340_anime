{% extends "main.j2" %}

{% block title %}Anime Recommender System{% endblock %}

{% block content %}
<div class="container">
    <h1>{{ table_title }} Table</h1>

    {# SEARCH BAR #}
    <div class="search">
        <form method="GET" action="{{ request.path }}">
            <input type="text" name="search" placeholder="Search {{ table_title }}" value="{{ request.args.get('search', '') }}">
            <button type="submit">Search</button>
        </form>
    </div>

    {# FILTERS #}
    {% if filters %}
    <form method="GET" action="{{ request.path }}">
        <select name="filter">
            <option value="">All</option>
            {% for key, value in filters.items() %}
                <option value="{{ key }}" {% if request.args.get('filter') == key %}selected{% endif %}>
                    {{ value }}
                </option>
            {% endfor %}
        </select>
        <button type="submit">Filter</button>
    </form>
    {% endif %}

    {# DATA TABLE #}
    {% if data %}
        <table class="table">
            <thead class="table-head">
                <tr>
                    {% for key in data[0].keys() %}
                        <th>{{ key | replace("_", " ") | title }}</th>
                    {% endfor %}
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for row in data %}
                <tr>
                    {% for key in row.keys() %}
                        <td>{{ row[key] }}</td>
                    {% endfor %}
                    <td>
                        <!-- Edit Button -->
                        <button class="edit-btn" data-row='{{ row | tojson }}'>Edit</button>
                        <!-- Delete Button -->
                        <form class="delete-form" data-id="{{ row.id }}" action="/streaming-services/delete/{{ row.id }}">
                            <button type="submit" class="delete-btn">Delete</button>
                        </form>
                    </td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    {% else %}
        <p>No data in table.</p>
    {% endif %}

    {# ADD BUTTON OPENS MODAL #}
    <button class="savebtn" id="addBtn">Add New</button>

    {# EDIT/ADD MODAL #}
    <div id="editModal" class="modal">
        <div class="modal-content">
            <h2 id="modalTitle">Edit Entry</h2>
            <form id="editForm">
                <input type="hidden" id="entryId" name="id">
                {% for key in data[0].keys() %}
                    <div class="entry">
                        <label for="{{ key }}">{{ key | replace("_", " ") | title }}:</label>
                        <input type="text" name="{{ key }}" id="{{ key }}">
                    </div>
                {% endfor %}
                <button class="savebtn" type="submit">Save</button>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const modal = document.getElementById("editModal");
        const modalTitle = document.getElementById("modalTitle");
        const editForm = document.getElementById("editForm");
        const addBtn = document.getElementById("addBtn");
        const closeModal = document.getElementById("closeModal");

        addBtn.addEventListener("click", () => {
            modal.style.display = "block";
            modalTitle.innerText = "Add New Entry";
            editForm.reset();
            editForm.dataset.method = "POST";
        });

        document.querySelectorAll(".edit-btn").forEach((btn) => {
            btn.addEventListener("click", () => {
                modal.style.display = "block";
                modalTitle.innerText = "Edit Entry";
                editform.dataset.method = "PUT";

                Object.keys(rowDaa).forEach((key) => {
                    const input = document.getElementById(key);
                    if (inputField) {
                        input.value = rowData[key];
                    }
                });
                document.getElementById("entryId").value = rowData.id;
            });
        });

        closeModal.addEventListener("click", () => {
            modal.style.display = "none";
            form.reset();
            document.getElementById("entryId").value = "";
        });

        editForm.addEventListener("submit", function(event) {
            event.preventDefault();

            const formData = newFormData(this);
            const jsonData = {};
            formData.forEach((value, key) => {
                jsonData[key] = value;
            });

            const isEditing = this.dataset.method === "PUT";
            const url = isEditing ? `/streaming-services/edit/${jsonData.id}` : "/streaming-services/add";
                : "/streaming-services/";

            fetch(url, {
                method: isEditing ? "PUT" : "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(jsonData),
            })
            .then((response) => response.json())
            .then(data => {
                if (data.error) {
                    alert(data.error);
                } else {
                    alert(data.message);
                    window.location.reload();
                }
            })
            .catch((error) => {
                console.error("Error:", error);
            });
        });
</script>

{% endblock %}
