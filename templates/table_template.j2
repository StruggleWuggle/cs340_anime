{% extends "main.j2" %}

{% block title %}Anime Recommender System{% endblock %}

{% block content %}
<div class="container">
    <h1>{{ table_title }} Table</h1>

    {# SEARCH BAR #}
    <div class="search">
        <form method="GET" action="{{ request.path }}">
            <input type="text" name="search" placeholder="Search {{ table_title }}" value="{{ request.args.get('search', '') }}">
            <button type="submit">Search</button>
        </form>
    </div>

    {# FILTERS #}
    {% if filters %}
    <form method="GET" action="{{ request.path }}">
        <select name="filter">
            <option value="">All</option>
            {% for key, value in filters.items() %}
                <option value="{{ key }}" {% if request.args.get('filter') == key %}selected{% endif %}>
                    {{ value }}
                </option>
            {% endfor %}
        </select>
        <button type="submit">Filter</button>
    </form>
    {% endif %}

    {# DATA TABLE #}
    {% if data %}
        <table class="table">
            <thead class="table-head">
                <tr>
                    {% for key in data[0].keys() %}
                        <th>{{ key | replace("_", " ") | title }}</th>
                    {% endfor %}
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for row in data %}
                <tr>
                    {% for key in row.keys() %}
                        <td>{{ row[key] }}</td>
                    {% endfor %}
                    <td>
                        <!-- Edit Button -->
                        <button class="edit-btn" data-row='{{ row | tojson }}'>Edit</button>

                        <!-- Delete Button -->
                        <button class="delete-btn" data-id="{{ row.id }}">Delete</button>
                    </td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    {% else %}
        <p>No data in table.</p>
    {% endif %}

    {# ADD BUTTON OPENS MODAL #}
    <button class="savebtn" id="addBtn">Add New</button>

    {# EDIT/ADD MODAL #}
    <div id="editModal" class="modal">
        <div class="modal-content">
            <h2 id="modalTitle">Edit Entry</h2>
            <form id="editForm">
                <input type="hidden" id="entryId" name="id">
                {% for key in data[0].keys() %}
                    <div class="entry">
                        <label for="{{ key }}">{{ key | replace("_", " ") | title }}:</label>
                        <input type="text" name="{{ key }}" id="{{ key }}">
                    </div>
                {% endfor %}
                <button class="savebtn" type="submit">Save</button>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
    const modal = document.getElementById("editModal");
    const modalTitle = document.getElementById("modalTitle");
    const editForm = document.getElementById("editForm");
    const addBtn = document.getElementById("addBtn");

    const tableName = "{{ table_title|lower|replace(' ', '-') }}"; // Convert to lowercase and replace spaces with dashes

    addBtn.addEventListener("click", () => {
        modal.style.display = "block";
        modalTitle.innerText = "Add New Entry";
        editForm.reset();
        editForm.dataset.method = "POST";
    });

    // EDIT BUTTON EVENT LISTENER
    document.querySelectorAll(".edit-btn").forEach((btn) => {
        btn.addEventListener("click", (event) => {
            modal.style.display = "block";
            modalTitle.innerText = "Edit Entry";
            editForm.dataset.method = "PUT";

            let rowData = JSON.parse(event.target.dataset.row);

            Object.keys(rowData).forEach((key) => {
                const input = document.getElementById(key);
                if (input) {
                    input.value = rowData[key];
                }
            });

            document.getElementById("entryId").value = rowData.id;
        });
    });

    // DELETE BUTTON EVENT LISTENER
    document.querySelectorAll(".delete-btn").forEach((btn) => {
        btn.addEventListener("click", (event) => {
            // Get the row that contains the delete button
            const row = event.target.closest("tr");

            // Get the first column id value
            const firstColumnValue = row.querySelector("td") ? row.querySelector("td").textContent.trim() : null;

            if (!firstColumnValue || isNaN(firstColumnValue)) {
                alert("Error: Could not determine the ID for deletion.");
                return;
            }

            console.log(`DEBUG: Deleting ${tableName} with ID: ${firstColumnValue}`);

            if (confirm(`Are you sure you want to delete this ${tableName} entry?`)) {
                fetch(`/${tableName}/${firstColumnValue}`, {
                    method: "DELETE"
                })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);
                    window.location.reload();
                })
                .catch(error => console.error("Error:", error));
            }
        });
    });

    // FORM SUBMISSION (POST / PUT)
    editForm.addEventListener("submit", function(event) {
        event.preventDefault();

        const formData = new FormData(this);
        const jsonData = {};
        formData.forEach((value, key) => {
            if (key.toLowerCase() !== "id") { // Skip "id"
                jsonData[key] = value;
            }
        });

        // Dynamically find the leftmost column
        const firstKey = Object.keys(jsonData)[0]; // First column name
        const entryId = jsonData[firstKey]; // Get value of the first column
        
        const isEditing = this.dataset.method === "PUT";
        const url = isEditing ? `/${tableName}/${entryId}` : `/${tableName}`;

        console.log(`DEBUG: Sending ${isEditing ? "PUT" : "POST"} request to:`, url);
        console.log("DEBUG: Payload:", jsonData);

        fetch(url, {
            method: isEditing ? "PUT" : "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(jsonData),
        })
        .then((response) => response.json())
        .then(data => {
            alert(data.message);
            window.location.reload();
        })
        .catch((error) => {
            console.error("Error:", error);
        });
    });
});
</script>

{% endblock %}
